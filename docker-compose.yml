version: "3"
volumes:
  dbbackups:
  postgis-data:
  redis:
services:
  sessions-service:
    image: sessions-service
    expose:
      - "8081"
      - "8082"
      - "8080"
    ports:
      - "8081:8081"
    networks:
      - default
    volumes:
      - $PWD/media:/app/media
    depends_on:
      - redis
  profiles-service:
    image: profiles-service
    expose:
      - "8081"
      - "8082"
      - "8080"
    ports:
      - "8082:8082"
    networks:
      - default
    volumes:
      - $PWD/media:/app/media
    depends_on:
      - redis
      - music-bd
      - sessions-service
  music-service:
    image: music-service
    expose:
      - "8081"
      - "8082"
      - "8080"
      - "8888"
    ports:
      - "8888:8888"
    networks:
      - default
    volumes:
      - $PWD/media:/app/media
    depends_on:
      - redis
      - music-bd
      - sessions-service
  redis:
    image: "redis:alpine"
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
  music-bd:
    image: kartoza/postgis:12.0
    expose:
      - "5432"
    volumes:
      - ./scripts/music_db.sql:/docker-entrypoint-initdb.d/init.sql
      - postgis-data:/var/lib/postgresql
    env_file:
      - envs/postgres.env
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus:/etc/prometheus"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  grafana:
    image: grafana/grafana
    user: "grafana"
    depends_on:
      - prometheus
    ports:
      - 3000:3000